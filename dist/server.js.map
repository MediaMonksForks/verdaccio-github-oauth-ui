{"version":3,"sources":["../constants.ts","../logger.ts","../redirect.ts","flows/CliFlow.ts","../statusPage.ts","flows/WebFlow.ts","flows/index.ts","plugin/Config.ts","github/Client.ts","github/AuthProvider.ts","github/index.ts","oidc/AuthProvider.ts","oidc/index.ts","verdaccio/Verdaccio.ts","verdaccio/index.ts","plugin/AuthCore.ts","plugin/Cache.ts","plugin/PatchHtml.ts","plugin/ProxyAgent.ts","plugin/ServeStatic.ts","plugin/Plugin.ts","index.ts"],"names":[],"mappings":"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","file":"server.js","sourceRoot":"../src/server","sourcesContent":["export const pluginName = \"oidc-ui\"\nexport const publicRoot = __dirname + \"/public\"\nexport const staticPath = \"/-/static/\" + pluginName\nexport const authorizePath = \"/-/oauth/authorize\"\nexport const callbackPath = \"/-/oauth/callback\"\n\nexport const cliPort = 8239\nexport const cliProviderId = \"cli\"\nexport const cliAuthorizeUrl = \"/oauth/authorize\"\n\nexport const publicGitHubOrigin = \"https://github.com\"\nexport const publicGitHubApiOrigin = \"https://api.github.com\"\n\n/**\n * See https://verdaccio.org/docs/en/packages\n */\nexport const authenticatedUserGroups = [\n  \"$all\",\n  \"@all\",\n  \"$authenticated\",\n  \"@authenticated\",\n] as const\n","import chalk from \"chalk\"\n\nimport { pluginName } from \"./constants\"\n\nconst prefix = chalk.blue(`[${pluginName}]`)\n\nexport const logger = {\n  log: console.log.bind(console, prefix),\n  error: console.error.bind(console, prefix),\n}\n\nconst plugin = require(__dirname + \"/../package.json\")\nlogger.log(`Version: ${plugin.name}@${plugin.version}`)\n","import { authorizePath, callbackPath } from \"./constants\"\n\nexport function getAuthorizePath(id?: string) {\n  return authorizePath + \"/\" + (id || \":id?\")\n}\n\nexport function getCallbackPath(id?: string) {\n  return callbackPath + (id ? \"/\" + id : \"\")\n}\n","import { IPluginMiddleware } from \"@verdaccio/types\"\nimport { Application, Handler } from \"express\"\nimport qs from \"query-string\"\n\nimport { cliPort, cliProviderId } from \"../../constants\"\nimport { logger } from \"../../logger\"\nimport { getCallbackPath } from \"../../redirect\"\nimport { AuthCore } from \"../plugin/AuthCore\"\nimport { AuthProvider } from \"../plugin/AuthProvider\"\nimport { Verdaccio } from \"../verdaccio\"\nimport { getConfig } from \"../plugin/Config\"\n\nconst pluginCallbackeUrl = getCallbackPath(cliProviderId)\n\nexport class CliFlow implements IPluginMiddleware<any> {\n  constructor(\n    private readonly verdaccio: Verdaccio,\n    private readonly core: AuthCore,\n    private readonly provider: AuthProvider,\n  ) {}\n\n  /**\n   * IPluginMiddleware\n   */\n  register_middlewares(app: Application) {\n    app.get(pluginCallbackeUrl, this.callback)\n  }\n\n  callback: Handler = async (req, res) => {\n    const params: Record<string, string> = {}\n\n    try {\n      const code = this.provider.getCode(req)\n      const token = await this.provider.getToken(code, pluginCallbackeUrl)\n      const [username, groups] = await Promise.all([\n        this.provider.getUsername(token),\n        this.provider.getGroups(token),\n      ])\n\n      if (this.core.authenticate(username, groups)) {\n        const user = await this.core.createAuthenticatedUser(username, groups)\n        const npmToken = await this.verdaccio.issueNpmToken(token, user)\n\n        params.status = \"success\"\n        params.token = encodeURIComponent(npmToken)\n      } else {\n        params.status = \"denied\"\n      }\n    } catch (error) {\n      logger.error(error)\n\n      params.status = \"error\"\n      params.message = error.message || error\n    }\n\n    const redirectUrl =\n      `http://localhost:${cliPort}` + \"?\" + qs.stringify(params)\n\n    res.redirect(redirectUrl)\n  }\n}\n","import { pluginName } from \"./constants\"\n\nexport function buildStatusPage(body: string, withBackButton: boolean) {\n  const backButton = withBackButton\n    ? `<p><button onclick=\"window.history.back()\">Go back</button></p>`\n    : \"\"\n\n  return `<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <title>${pluginName}</title>\n    <style>\n      html,\n      body {\n        padding: 0;\n        margin: 0;\n        height: 100%;\n        background-color: #e0e0e0;\n        color: #24292F;\n        font-family: Helvetica, sans-serif;\n        position: relative;\n        text-align: center;\n      }\n      .wrap {\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n      }\n      a {\n        color: #3f51b5;\n      }\n      .img {\n        filter: drop-shadow(0 0.5rem 0.5rem #24292F80);\n        width: 100px;\n      }\n    </style>\n  </head>\n  <body>\n    <div class=\"wrap\">\n      <svg class=\"img\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 100 100\"><defs/><defs><filter id=\"a\" width=\"139.6%\" height=\"140.4%\" x=\"-20%\" y=\"-12%\" filterUnits=\"objectBoundingBox\"><feOffset dy=\"4\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\"/><feGaussianBlur in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" stdDeviation=\"2.5\"/><feComposite in=\"shadowBlurOuter1\" in2=\"SourceAlpha\" operator=\"out\" result=\"shadowBlurOuter1\"/><feColorMatrix in=\"shadowBlurOuter1\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.0906646286 0\"/></filter><filter id=\"c\" width=\"167.9%\" height=\"272.7%\" x=\"-34%\" y=\"-50%\" filterUnits=\"objectBoundingBox\"><feOffset dy=\"4\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\"/><feGaussianBlur in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" stdDeviation=\"2.5\"/><feColorMatrix in=\"shadowBlurOuter1\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.0906646286 0\"/></filter><path id=\"b\" d=\"M48 17L33 47h-9L0 0h15l13 25 5-8h15z\"/><path id=\"d\" d=\"M35 11h-7V9h8l2-3h-6V4h7l1-2h-4V0h20l-6 11H35z\"/></defs><g fill=\"none\" fill-rule=\"evenodd\"><rect width=\"100\" height=\"100\" fill=\"#000\" rx=\"37\"/><g transform=\"translate(22 30)\"><use fill=\"#000\" filter=\"url(#a)\" xlink:href=\"#b\"/><use fill=\"#FFF\" fill-opacity=\".6\" xlink:href=\"#b\"/></g><g transform=\"translate(22 30)\"><use fill=\"#000\" filter=\"url(#c)\" xlink:href=\"#d\"/><use fill=\"#FFF\" xlink:href=\"#d\"/></g><path fill=\"#FFF\" d=\"M55 77h-9L22 30h15l21 41z\"/></g></svg>\n      ${body}\n      ${backButton}\n    </div>\n  </body>\n</html>`\n}\n\nexport function buildErrorPage(error: any, withBackButton: boolean) {\n  return buildStatusPage(\n    `<h1>Sorry :(</h1>\n    <p>${error?.message || error}</p>`,\n    withBackButton,\n  )\n}\n\nexport function buildAccessDeniedPage(withBackButton: boolean) {\n  return buildStatusPage(\n    `<h1>Access Denied</h1>\n    <p>You are not a member of the required access group.</p>`,\n    withBackButton,\n  )\n}\n","import { IPluginMiddleware } from \"@verdaccio/types\"\nimport { Application, Handler, Request } from \"express\"\nimport { getPublicUrl } from \"verdaccio/build/lib/utils\"\n\nimport { logger } from \"../../logger\"\nimport { getAuthorizePath, getCallbackPath } from \"../../redirect\"\nimport { buildAccessDeniedPage, buildErrorPage } from \"../../statusPage\"\nimport { AuthCore } from \"../plugin/AuthCore\"\nimport { AuthProvider } from \"../plugin/AuthProvider\"\nimport { Config } from \"../plugin/Config\"\n\nexport class WebFlow implements IPluginMiddleware<any> {\n  constructor(\n    private readonly config: Config,\n    private readonly core: AuthCore,\n    private readonly provider: AuthProvider,\n  ) {}\n\n  /**\n   * IPluginMiddleware\n   */\n  register_middlewares(app: Application) {\n    app.get(getAuthorizePath(), this.authorize)\n    app.get(getCallbackPath(), this.callback)\n  }\n\n  /**\n   * Initiates the auth flow by redirecting to the provider's login URL.\n   */\n  authorize: Handler = async (req, res, next) => {\n    try {\n      const redirectUrl = this.getRedirectUrl(req)\n      const url = this.provider.getLoginUrl(redirectUrl)\n      res.redirect(url)\n    } catch (error) {\n      logger.error(error)\n      next(error)\n    }\n  }\n\n  /**\n   * After successful authentication, the auth provider redirects back to us.\n   * We use the code in the query params to get an access token and the username\n   * associated with the account.\n   *\n   * We issue a JWT using these values and pass them back to the frontend as\n   * query parameters so they can be stored in the browser.\n   *\n   * The username and token are encrypted and base64 encoded to form a token for\n   * the npm CLI.\n   *\n   * There is no need to later decode and decrypt the token. This process is\n   * automatically reversed by verdaccio before passing it to the plugin.\n   */\n  callback: Handler = async (req, res) => {\n    const withBackButton = true\n\n    try {\n      const code = this.provider.getCode(req)\n      const token = await this.provider.getToken(code, this.getRedirectUrl(req))\n      const [username, groups] = await Promise.all([\n        this.provider.getUsername(token),\n        this.provider.getGroups(token),\n      ])\n\n      if (this.core.authenticate(username, groups)) {\n        const ui = await this.core.createUiCallbackUrl(username, token, groups)\n\n        res.redirect(ui)\n      } else {\n        res.status(401).send(buildAccessDeniedPage(withBackButton))\n      }\n    } catch (error) {\n      logger.error(error)\n\n      res.status(500).send(buildErrorPage(error, withBackButton))\n    }\n  }\n\n  private getRedirectUrl(req: Request): string {\n    const baseUrl = getPublicUrl(this.config.url_prefix, req).replace(/\\/$/, \"\")\n    const path = getCallbackPath(req.params.id)\n    const redirectUrl = baseUrl + path\n\n    return redirectUrl\n  }\n}\n","export * from \"./CliFlow\"\nexport * from \"./WebFlow\"\n","import {\n  Config as IncorrectVerdaccioConfig,\n  PackageAccess as IncorrectVerdaccioPackageAccess,\n} from \"@verdaccio/types\"\nimport chalk from \"chalk\"\nimport get from \"lodash/get\"\nimport ow from \"ow\"\nimport { pluginName, publicGitHubOrigin } from \"../../constants\"\nimport { logger } from \"../../logger\"\n\n//\n// Types\n//\n\n// Verdaccio incorrectly types some of these as string arrays\n// although they are all strings.\nexport interface PackageAccess extends IncorrectVerdaccioPackageAccess {\n  unpublish?: string[]\n}\n\nexport type VerdaccioConfig = Omit<IncorrectVerdaccioConfig, \"packages\"> & {\n  packages?: Record<string, PackageAccess>\n}\n\nexport interface PluginConfig {\n  \"org\": string | false,\n  \"client-id\": string,\n  \"client-secret\": string,\n  \"enterprise-origin\"?: string | false,\n\n  \"oidc-issuer-url\"?: string,\n  \"oidc-username-property\"?: string,\n  \"oidc-groups-property\"?: string,\n}\n\nexport type PluginConfigKey = keyof PluginConfig\n\nexport interface Config extends VerdaccioConfig {\n  middlewares: { [pluginName]: PluginConfig }\n  auth: { [pluginName]: PluginConfig }\n}\n\n//\n// Access\n//\n\nexport function getConfig(config: Config, key: PluginConfigKey): string {\n  const value =\n    get(config, `middlewares[${pluginName}][${key}]`) ??\n    get(config, `auth[${pluginName}][${key}]`)\n\n  return process.env[value] || value\n}\n\n/**\n * user_agent: e.g. \"verdaccio/5.0.4\" --> 5\n */\nexport function getMajorVersion(config: VerdaccioConfig) {\n  return +config.user_agent.replace(/^verdaccio\\/(\\d+).\\d+.\\d+$/, \"$1\")\n}\n\n//\n// Validation\n//\n\nfunction validateProp(config: Config, key: PluginConfigKey, predicate: any) {\n  const value = getConfig(config, key)\n\n  try {\n    ow(value, predicate)\n  } catch (error) {\n    logger.error(\n      chalk.red(\n        `[${pluginName}] ERR: Invalid configuration at \"auth.${pluginName}.${key}\": ${error.message}`,\n      ),\n    )\n    throw new Error(\"Please check your verdaccio config.\")\n  }\n}\n\nfunction ensureObjectNotEmpty(config: Config, node: keyof Config) {\n  const path = `[${node}][${pluginName}]`\n  const obj = get(config, path, {})\n\n  if (!Object.keys(obj).length) {\n    throw new Error(`\"${node}.${pluginName}\" must be enabled`)\n  }\n}\n\nexport function validateConfig(config: Config) {\n  const majorVersion = getMajorVersion(config)\n\n  if (majorVersion < 5) {\n    throw new Error(\"This plugin requires verdaccio 5 or above\")\n  }\n\n  ensureObjectNotEmpty(config, \"auth\")\n  ensureObjectNotEmpty(config, \"middlewares\")\n\n  validateProp(config, \"client-id\", ow.string.nonEmpty)\n  validateProp(config, \"client-secret\", ow.string.nonEmpty)\n  validateProp(\n    config,\n    \"org\",\n    ow.any(\n      ow.string.nonEmpty.not.startsWith(publicGitHubOrigin),\n      ow.boolean.false,\n    ),\n  )\n  validateProp(\n    config,\n    \"enterprise-origin\",\n    ow.any(\n      ow.undefined,\n      ow.string.url.nonEmpty.not.startsWith(publicGitHubOrigin),\n      ow.boolean.false,\n    ),\n  )\n}\n","import { exchangeWebFlowCode } from \"@octokit/oauth-methods\"\nimport { request } from \"@octokit/request\"\nimport { Octokit } from \"octokit\"\n\nexport class GitHubClient {\n  constructor(\n    private readonly webBaseUrl: string,\n    private readonly apiBaseUrl: string,\n  ) {}\n\n  private createOktokit(accessToken: string) {\n    return new Octokit({ auth: accessToken, baseUrl: this.apiBaseUrl })\n  }\n\n  /**a\n   * `POST /login/oauth/access_token`\n   *\n   * [Web application flow](bit.ly/2mNSppX).\n   */\n  requestAccessToken = async (\n    code: string,\n    clientId: string,\n    clientSecret: string,\n  ) => {\n    try {\n      return await exchangeWebFlowCode({\n        clientType: \"oauth-app\",\n        clientId,\n        clientSecret,\n        code,\n        request: request.defaults({\n          baseUrl: this.webBaseUrl,\n        }),\n      })\n    } catch (error) {\n      throw new Error(\"Failed requesting GitHub access token: \" + error.message)\n    }\n  }\n\n  /**\n   * `GET /user`\n   *\n   * [Get the authenticated user](https://developer.github.com/v3/users/#get-the-authenticated-user)\n   */\n  requestUser = async (accessToken: string) => {\n    try {\n      const oktokit = this.createOktokit(accessToken)\n      return await oktokit.rest.users.getAuthenticated()\n    } catch (error) {\n      throw new Error(\"Failed requesting GitHub user info: \" + error.message)\n    }\n  }\n\n  /**\n   * `GET /user/orgs`\n   *\n   * [List your organizations](https://developer.github.com/v3/orgs/#list-your-organizations)\n   */\n  requestUserOrgs = async (accessToken: string) => {\n    try {\n      const oktokit = this.createOktokit(accessToken)\n      return await oktokit.paginate(\n        oktokit.rest.orgs.listForAuthenticatedUser,\n        { per_page: 100 },\n      )\n    } catch (error) {\n      throw new Error(\"Failed requesting GitHub user orgs: \" + error.message)\n    }\n  }\n\n  /**\n   * `GET /user/teams`\n   *\n   * [List your teams](https://docs.github.com/en/rest/reference/teams#list-teams-for-the-authenticated-user)\n   */\n  requestUserTeams = async (accessToken: string) => {\n    try {\n      const oktokit = this.createOktokit(accessToken)\n      return await oktokit.paginate(\n        oktokit.rest.teams.listForAuthenticatedUser,\n        { per_page: 100 },\n      )\n    } catch (error) {\n      throw new Error(\"Failed requesting GitHub user teams: \" + error.message)\n    }\n  }\n\n  /**\n   * `GET /user/repos`\n   *\n   * [List your repositories](https://docs.github.com/en/rest/reference/repos#list-repositories-for-the-authenticated-user)\n   */\n  requestUserRepos = async (accessToken: string) => {\n    try {\n      const oktokit = this.createOktokit(accessToken)\n      return await oktokit.paginate(\n        oktokit.rest.repos.listForAuthenticatedUser,\n        { per_page: 100 },\n      )\n    } catch (error) {\n      throw new Error(\n        \"Failed requesting GitHub user repositories: \" + error.message,\n      )\n    }\n  }\n}\n","import { Request } from \"express\"\nimport { stringify } from \"querystring\"\nimport { publicGitHubApiOrigin, publicGitHubOrigin } from \"../../constants\"\nimport { AuthProvider } from \"../plugin/AuthProvider\"\nimport { Config, getConfig } from \"../plugin/Config\"\nimport { GitHubClient } from \"./Client\"\n\nexport class GitHubAuthProvider implements AuthProvider {\n  private readonly clientId = getConfig(this.config, \"client-id\")\n  private readonly clientSecret = getConfig(this.config, \"client-secret\")\n  private readonly enterpriseOrigin = getConfig(\n    this.config,\n    \"enterprise-origin\",\n  )\n  private readonly client = new GitHubClient(this.webBaseUrl, this.apiBaseUrl)\n\n  get webBaseUrl(): string {\n    return this.enterpriseOrigin || publicGitHubOrigin\n  }\n\n  get apiBaseUrl(): string {\n    return this.enterpriseOrigin\n      ? this.enterpriseOrigin.replace(/\\/?$/, \"\") + \"/api/v3\"\n      : publicGitHubApiOrigin\n  }\n\n  constructor(private readonly config: Config) {}\n\n  getId() {\n    return \"github\"\n  }\n\n  getLoginUrl(callbackUrl: string) {\n    const queryParams = stringify({\n      client_id: this.clientId,\n      redirect_uri: callbackUrl,\n      scope: \"read:org,repo\",\n    })\n    return this.webBaseUrl + `/login/oauth/authorize?` + queryParams\n  }\n\n  getCode(req: Request) {\n    return req.query.code as string\n  }\n\n  async getToken(code: string) {\n    const auth = await this.client.requestAccessToken(\n      code,\n      this.clientId,\n      this.clientSecret,\n    )\n    return auth.authentication.token\n  }\n\n  async getUsername(token: string) {\n    const user = await this.client.requestUser(token)\n    return user.data.login\n  }\n\n  createOwnerGroup(orgName: string) {\n    return `${this.getId()}/owner/${orgName}`\n  }\n\n  createTeamGroup(orgName: string, teamName: string) {\n    return `${this.createOwnerGroup(orgName)}/team/${teamName}`\n  }\n\n  createRepoGroup(ownerName: string, repoName: string) {\n    return `${this.createOwnerGroup(ownerName)}/repo/${repoName}`\n  }\n\n  createLegacyOrgGroup(orgName: string) {\n    return `${this.getId()}/${orgName}`\n  }\n\n  createLegacyTeamGroup(orgName: string, teamName: string) {\n    return `${this.createLegacyOrgGroup(orgName)}/team/${teamName}`\n  }\n\n  async getGroups(token: string) {\n    const [username, orgs, teams, repos] = await Promise.all([\n      this.getUsername(token),\n      this.client.requestUserOrgs(token),\n      this.client.requestUserTeams(token),\n      this.client.requestUserRepos(token),\n    ])\n\n    const orgGroups = orgs.map((org) => this.createOwnerGroup(org.login))\n    const teamGroups = teams.map((team) =>\n      this.createTeamGroup(team.organization?.login, team.name),\n    )\n    const repoGroups = repos.map((repo) =>\n      this.createRepoGroup(repo.owner.login, repo.name),\n    )\n    const userGroup = this.createOwnerGroup(username)\n    const legacyOrgGroups = orgs.map((org) =>\n      this.createLegacyOrgGroup(org.login),\n    )\n    const legacyTeamGroups = teams.map((team) =>\n      this.createLegacyTeamGroup(team.organization.login, team.name),\n    )\n\n    return [\n      ...orgGroups,\n      ...teamGroups,\n      ...repoGroups,\n      userGroup,\n      ...legacyOrgGroups,\n      ...legacyTeamGroups,\n    ]\n  }\n}\n","export * from \"./AuthProvider\"\n","import { Request } from \"express\"\nimport { Issuer, Client, CallbackParamsType } from 'openid-client'\n\nimport { AuthProvider } from \"../plugin/AuthProvider\"\nimport { Config, getConfig } from \"../plugin/Config\";\n\nexport class OpenIDConnectAuthProvider implements AuthProvider {\n  private readonly issuerUrl = getConfig(this.config, \"oidc-issuer-url\") || \"\"\n  private readonly usernameProperty = getConfig(this.config, \"oidc-username-property\") || \"nickname\"\n  private readonly groupsProperty = getConfig(this.config, \"oidc-groups-property\") || \"groups\"\n  private readonly clientId = getConfig(this.config, \"client-id\")\n  private readonly clientSecret = getConfig(this.config, \"client-secret\")\n\n  private client?: Client;\n\n  constructor(\n    private readonly config: Config,\n  ) {\n    // not sure of a better way to do this:\n    this.discoverClient()\n  }\n\n  private get discoveredClient(): Client {\n    if (!this.client) {\n      throw new Error('Client has not yet been discovered')\n    }\n\n    return this.client\n  }\n\n  private async discoverClient() {\n    const issuer = await Issuer.discover(this.issuerUrl)\n    const client = new issuer.Client({\n      client_id: this.clientId,\n      client_secret: this.clientSecret,\n      response_types: [\"code\"],\n    })\n    this.client = client\n  }\n\n  getId(): string {\n    return \"oidc\"\n  }\n\n  getLoginUrl(callbackUrl: string): string {\n    return this.discoveredClient.authorizationUrl({\n      scope: \"openid\",\n      redirect_uri: callbackUrl,\n    });\n  }\n\n  getCode(req: Request): string {\n    return JSON.stringify(this.discoveredClient.callbackParams(req.url))\n  }\n\n  async getToken(code: string, callbackUrl?: string): Promise<string> {\n    const params = JSON.parse(code) as CallbackParamsType;\n    const tokenSet = await this.discoveredClient.callback(callbackUrl, params);\n\n    if (tokenSet.access_token !== undefined) {\n      return tokenSet.access_token\n    }\n\n    throw new Error(\"No access_token received in getToken callback\")\n  }\n\n  async getUsername(token: string): Promise<string> {\n    const userinfo = await this.discoveredClient.userinfo(token)\n    const username = userinfo[this.usernameProperty] as string|undefined\n\n    if (username !== undefined) {\n      return username\n    }\n\n    throw new Error(`Could not grab username using the ${this.usernameProperty} property`)\n  }\n\n  async getGroups(token: string): Promise<string[]> {\n    const userinfo = await this.discoveredClient.userinfo(token)\n    const groups = userinfo[this.groupsProperty] as string[]|undefined\n\n    if (groups !== undefined) {\n      return groups\n    }\n\n    throw new Error(`Could not grab groups using the ${this.groupsProperty} property`)\n  }\n}","export * from \"./AuthProvider\"\n","import { JWTSignOptions } from \"@verdaccio/types\"\nimport merge from \"lodash/merge\"\nimport { getMajorVersion, VerdaccioConfig } from \"../plugin/Config\"\nimport { Auth, User } from \"../verdaccio\"\n\n// Most of this is duplicated Verdaccio code because it is unfortunately not availabel via API.\n// https://github.com/verdaccio/verdaccio/blob/master/src/lib/auth-utils.ts#L129\n\nconst TIME_EXPIRATION_7D = \"7d\" as const\n\nconst defaultSecurity = {\n  api: {\n    legacy: true,\n  },\n  web: {\n    sign: {\n      expiresIn: TIME_EXPIRATION_7D,\n    },\n    verify: {},\n  },\n} as const\n\nfunction getSecurity(config: VerdaccioConfig) {\n  return merge({}, defaultSecurity, config.security)\n}\n\n/**\n * Abstract Verdaccio version differences and usage of all Verdaccio objects.\n */\nexport class Verdaccio {\n  readonly majorVersion = getMajorVersion(this.config)\n  readonly security = getSecurity(this.config)\n\n  private auth!: Auth\n\n  constructor(private readonly config: VerdaccioConfig) {}\n\n  setAuth(auth: Auth): Verdaccio {\n    this.auth = auth\n    return this\n  }\n\n  async issueNpmToken(token: string, user: User) {\n    const jwtSignOptions = this.security?.api?.jwt?.sign\n\n    if (jwtSignOptions) {\n      return this.issueVerdaccio4PlusJWT(user, jwtSignOptions)\n    } else {\n      return this.encrypt(user.name + \":\" + token)\n    }\n  }\n\n  async issueUiToken(user: User) {\n    const jwtSignOptions = this.security.web.sign\n\n    return this.issueVerdaccio4PlusJWT(user, jwtSignOptions)\n  }\n\n  // https://github.com/verdaccio/verdaccio/blob/master/src/api/web/endpoint/user.ts#L31\n  private async issueVerdaccio4PlusJWT(\n    user: User,\n    jwtSignOptions: JWTSignOptions,\n  ) {\n    return this.auth.jwtEncrypt(user, jwtSignOptions)\n  }\n\n  private encrypt(text: string) {\n    return this.auth.aesEncrypt(Buffer.from(text)).toString(\"base64\")\n  }\n}\n","import { RemoteUser } from \"@verdaccio/types\"\n\nimport { IAuth, IAuthWebUI } from \"./verdaccio-4-internal-types\"\n\nexport { Verdaccio } from \"./Verdaccio\"\n\nexport type Auth = IAuth\nexport type AuthWebUI = IAuthWebUI\nexport type User = RemoteUser\n","import uniq from \"lodash/uniq\"\nimport { stringify } from \"querystring\"\nimport { authenticatedUserGroups } from \"../../constants\"\nimport { logger } from \"../../logger\"\nimport { User, Verdaccio } from \"../verdaccio\"\nimport { Config, getConfig } from \"./Config\"\n\nexport class AuthCore {\n  private readonly org = getConfig(this.config, \"org\")\n  private readonly requiredGroup = this.org ? \"github/owner/\" + this.org : null\n  private readonly configuredGroups = this.getConfiguredGroups()\n\n  constructor(\n    private readonly verdaccio: Verdaccio,\n    private readonly config: Config,\n  ) {}\n\n  /**\n   * Returns all permission groups used in the Verdacio config.\n   */\n  getConfiguredGroups() {\n    const configuredGroups: Record<string, true> = {}\n    Object.values(this.config.packages || {}).forEach((packageConfig) => {\n      ;[\"access\", \"publish\", \"unpublish\"]\n        .flatMap((key) => packageConfig[key])\n        .filter(Boolean)\n        .forEach((group: string) => {\n          configuredGroups[group] = true\n        })\n    })\n    return configuredGroups\n  }\n\n  async createAuthenticatedUser(\n    username: string,\n    groups: string[],\n  ): Promise<User> {\n    const relevantGroups = groups.filter(\n      (group) => group in this.configuredGroups,\n    )\n\n    relevantGroups.push(username)\n\n    if (this.requiredGroup) {\n      relevantGroups.push(this.requiredGroup)\n    }\n\n    const user: User = {\n      name: username,\n      groups: [...authenticatedUserGroups],\n      real_groups: uniq(relevantGroups.filter(Boolean).sort()),\n    }\n    logger.log(\"Created authenticated user\", user)\n\n    return user\n  }\n\n  async createUiCallbackUrl(\n    username: string,\n    token: string,\n    groups: string[],\n  ): Promise<string> {\n    const user = await this.createAuthenticatedUser(username, groups)\n\n    const uiToken = await this.verdaccio.issueUiToken(user)\n    const npmToken = await this.verdaccio.issueNpmToken(token, user)\n\n    const query = { username, uiToken, npmToken }\n    const url = \"/?\" + stringify(query)\n\n    return url\n  }\n\n  authenticate(username: string, groups: string[]): boolean {\n    if (this.requiredGroup && !groups.includes(this.requiredGroup)) {\n      logger.error(\n        `Access denied: User \"${username}\" is not a member of \"${this.requiredGroup}\"`,\n      )\n      return false\n    }\n\n    if (!groups.length) {\n      logger.error(`Access denied: User \"${username}\" does not have any groups`)\n      return false\n    }\n\n    return true\n  }\n}\n","import { Cache as MemoryCache } from \"memory-cache\"\n\nimport { logger } from \"../../logger\"\nimport { AuthProvider } from \"./AuthProvider\"\n\n/**\n * When installing packages, the CLI makes a burst of package requests.\n *\n * If we were to perform a full authentication check and fetch the provider groups\n * on each package request, this would slow down the process a lot and we would\n * likely hit a request limit with the auth provider.\n *\n * Therefore authentication is only performed once and is cached until no request\n * has been made for a short period.\n */\nexport class Cache {\n  private readonly cache = new MemoryCache<string, string[]>()\n  private readonly namespace = this.authProvider.getId()\n\n  constructor(\n    private readonly authProvider: AuthProvider,\n    private readonly cacheTTLms = 10_000, // 10s\n  ) {}\n\n  async getGroups(token: string): Promise<string[]> {\n    let groups: string[] | null = null\n\n    try {\n      const key = [this.namespace, token].join(\"_\")\n\n      groups = this.cache.get(key)\n\n      if (!groups) {\n        groups = await this.authProvider.getGroups(token)\n      }\n\n      this.cache.put(key, groups || [], this.cacheTTLms)\n    } catch (error) {\n      logger.error(error)\n    }\n\n    return groups || []\n  }\n}\n","import { IPluginMiddleware } from \"@verdaccio/types\"\nimport { Application, Handler } from \"express\"\nimport { readFileSync } from \"fs\"\n\nimport { publicRoot, staticPath } from \"../../constants\"\nimport { Verdaccio } from \"../verdaccio\"\n\n/**\n * Injects additional static imports into the DOM with code from the client folder\n * that modifies the login button.\n */\nexport class PatchHtml implements IPluginMiddleware<any> {\n  private readonly scriptTag = `<script src=\"${staticPath}/verdaccio-${this.verdaccio.majorVersion}.js\"></script>`\n  private readonly styleTag = `<style>${readFileSync(\n    `${publicRoot}/verdaccio-${this.verdaccio.majorVersion}.css`,\n  )}</style>`\n  private readonly headWithStyle = [this.styleTag, \"</head>\"].join(\"\")\n  private readonly bodyWithScript = [this.scriptTag, \"</body>\"].join(\"\")\n\n  constructor(private readonly verdaccio: Verdaccio) {}\n\n  /**\n   * IPluginMiddleware\n   */\n  register_middlewares(app: Application) {\n    app.use(this.patchResponse)\n  }\n\n  /**\n   * Patches `res.send` in order to inject style and script tags.\n   */\n  patchResponse: Handler = (req, res, next) => {\n    const send = res.send\n    res.send = (html) => {\n      html = this.insertTags(html)\n      return send.call(res, html)\n    }\n    next()\n  }\n\n  private insertTags = (html: string | Buffer): string => {\n    html = String(html)\n    if (!html.includes(\"__VERDACCIO_BASENAME_UI_OPTIONS\")) {\n      return html\n    }\n    return html\n      .replace(/<\\/head>/, this.headWithStyle)\n      .replace(/<\\/body>/, this.bodyWithScript)\n  }\n}\n","import { bootstrap } from \"global-agent\"\n\nimport { logger } from \"../../logger\"\n\ndeclare const GLOBAL_AGENT: any\n\nexport function registerGlobalProxyAgent() {\n  bootstrap()\n  const config = JSON.stringify(GLOBAL_AGENT || {})\n  logger.log(\"Proxy config:\", config)\n}\n","import { IPluginMiddleware } from \"@verdaccio/types\"\nimport { Application, static as expressServeStatic } from \"express\"\n\nimport { publicRoot, staticPath } from \"../../constants\"\n\n/**\n * Serves additional static assets required to modify the login button.\n */\nexport class ServeStatic implements IPluginMiddleware<any> {\n  /**\n   * IPluginMiddleware\n   */\n  register_middlewares(app: Application) {\n    app.use(staticPath, expressServeStatic(publicRoot))\n  }\n}\n","import {\n  AllowAccess,\n  AuthAccessCallback,\n  AuthCallback,\n  IPluginAuth,\n  IPluginMiddleware,\n  RemoteUser,\n} from \"@verdaccio/types\"\nimport { Application } from \"express\"\n\nimport { CliFlow, WebFlow } from \"../flows\"\nimport { GitHubAuthProvider } from \"../github\"\nimport { OpenIDConnectAuthProvider } from \"../oidc\"\nimport { Auth, Verdaccio } from \"../verdaccio\"\nimport { AuthCore } from \"./AuthCore\"\nimport { Cache } from \"./Cache\"\nimport { Config, PackageAccess, validateConfig } from \"./Config\"\nimport { PatchHtml } from \"./PatchHtml\"\nimport { registerGlobalProxyAgent } from \"./ProxyAgent\"\nimport { ServeStatic } from \"./ServeStatic\"\nimport { AuthProvider } from \"./AuthProvider\"\n\nconst createAuthProvider = (config: Config): AuthProvider => {\n  // not sure of a better place to put this:\n  if (config[\"oidc-issuer-url\"]) {\n    return new OpenIDConnectAuthProvider(config)\n  }\n\n  return new GitHubAuthProvider(config)\n}\n\n/**\n * Implements the verdaccio plugin interfaces.\n */\nexport class Plugin implements IPluginMiddleware<any>, IPluginAuth<any> {\n  private readonly provider = createAuthProvider(this.config)\n  private readonly cache = new Cache(this.provider)\n  private readonly verdaccio = new Verdaccio(this.config)\n  private readonly core = new AuthCore(this.verdaccio, this.config)\n\n  constructor(private readonly config: Config) {\n    validateConfig(config)\n    registerGlobalProxyAgent()\n  }\n\n  /**\n   * IPluginMiddleware\n   */\n  register_middlewares(app: Application, auth: Auth) {\n    this.verdaccio.setAuth(auth)\n\n    const children = [\n      new ServeStatic(),\n      new PatchHtml(this.verdaccio),\n      new WebFlow(this.config, this.core, this.provider),\n      new CliFlow(this.verdaccio, this.core, this.provider),\n    ]\n\n    for (const child of children) {\n      child.register_middlewares(app)\n    }\n  }\n\n  /**\n   * IPluginAuth\n   */\n  async authenticate(\n    username: string,\n    token: string,\n    callback: AuthCallback,\n  ): Promise<void> {\n    try {\n      if (!username || !token) {\n        callback(null, false)\n        return\n      }\n\n      const groups = await this.cache.getGroups(token)\n\n      if (this.core.authenticate(username, groups)) {\n        const user = await this.core.createAuthenticatedUser(username, groups)\n\n        callback(null, user.real_groups)\n        return\n      }\n\n      callback(null, false)\n    } catch (error) {\n      callback(error, false)\n    }\n  }\n\n  /**\n   * IPluginAuth\n   */\n  allow_access(\n    user: RemoteUser,\n    config: AllowAccess & PackageAccess,\n    callback: AuthAccessCallback,\n  ): void {\n    if (config.access) {\n      const grant = config.access.some((group) => user.groups.includes(group))\n      callback(null, grant)\n    } else {\n      callback(null, true)\n    }\n  }\n\n  /**\n   * IPluginAuth\n   */\n  allow_publish(\n    user: RemoteUser,\n    config: AllowAccess & PackageAccess,\n    callback: AuthAccessCallback,\n  ): void {\n    if (config.publish) {\n      const grant = config.publish.some((group) => user.groups.includes(group))\n      callback(null, grant)\n    } else {\n      this.allow_access(user, config, callback)\n    }\n  }\n\n  /**\n   * IPluginAuth\n   */\n  allow_unpublish(\n    user: RemoteUser,\n    config: AllowAccess & PackageAccess,\n    callback: AuthAccessCallback,\n  ): void {\n    if (config.unpublish) {\n      const grant = config.unpublish.some((group) =>\n        user.groups.includes(group),\n      )\n      callback(null, grant)\n    } else {\n      this.allow_publish(user, config, callback)\n    }\n  }\n}\n","import { Plugin } from \"./plugin/Plugin\"\nimport dotenv from \"dotenv\"\n\ndotenv.config()\n\n// plugins must be a default export\nexport default Plugin\n"]}